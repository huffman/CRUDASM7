// out_intel_insns.h  (note: this file was automatically generated -- do not edit!)
// Copyright (C) 2011 Willow Schlanger. All rights reserved.

struct crudasm_intel_insn_t crudasm_intel_insns[] = {

	/*aaa*/  { "aaa", "aaa", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_aad*/  { "_aad", "_aad", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_aam*/  { "_aam", "_aam", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*aas*/  { "aas", "aas", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*das*/  { "das", "das", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*daa*/  { "daa", "daa", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*adc*/  { "adc", "adc", 2, {-1, -1, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*add*/  { "add", "add", 2, {-1, -1, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*or*/  { "or", "or", 2, {-1, -1, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*sbb*/  { "sbb", "sbb", 2, {-1, -1, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*and*/  { "and", "and", 2, {-1, -1, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*sub*/  { "sub", "sub", 2, {-1, -1, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*xor*/  { "xor", "xor", 2, {-1, -1, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*cmp*/  { "cmp", "cmp", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*rol*/  { "rol", "rol", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*ror*/  { "ror", "ror", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*rcl*/  { "rcl", "rcl", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*rcr*/  { "rcr", "rcr", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*shl*/  { "shl", "shl", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*shr*/  { "shr", "shr", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_sal*/  { "_sal", "_sal", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*sar*/  { "sar", "sar", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*invept*/  { "invept", "invept", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*invvpid*/  { "invvpid", "invvpid", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*vmcall*/  { "vmcall", "vmcall", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*vmclear*/  { "vmclear", "vmclear", 1, {8, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*vmlaunch*/  { "vmlaunch", "vmlaunch", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*vmresume*/  { "vmresume", "vmresume", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*vmptrld*/  { "vmptrld", "vmptrld", 1, {8, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*vmptrst*/  { "vmptrst", "vmptrst", 1, {8, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*vmread*/  { "vmread", "vmread", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*vmwrite*/  { "vmwrite", "vmwrite", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*vmxoff*/  { "vmxoff", "vmxoff", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*vmxon*/  { "vmxon", "vmxon", 1, {8, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*fxtract*/  { "fxtract", "fxtract", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*phaddw*/  { "phaddw", "phaddw", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*phaddd*/  { "phaddd", "phaddd", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*f2xm1*/  { "f2xm1", "f2xm1", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*fcos*/  { "fcos", "fcos", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*movaps*/  { "movaps", "movaps", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*stmxcsr*/  { "stmxcsr", "stmxcsr", 1, {4, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*ldmxcsr*/  { "ldmxcsr", "ldmxcsr", 1, {4, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*movdqu*/  { "movdqu", "movdqu", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_movsd2*/  { "_movsd2", "_movsd2", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*movss*/  { "movss", "movss", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*movdqa*/  { "movdqa", "movdqa", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*prefetch*/  { "prefetch", "prefetch", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*prefetchw*/  { "prefetchw", "prefetchw", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*mov*/  { "mov", "mov", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_ins*/  { "_ins", "_ins", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/1,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_outs*/  { "_outs", "_outs", 2, {2, 2, 0, 0}, /*lockable*/0,/*repable*/1,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*bound*/  { "bound", "bound", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*arpl*/  { "arpl", "arpl", 2, {2, 2, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*movsxd*/  { "movsxd", "movsxd", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*rsm*/  { "rsm", "rsm", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*ud2*/  { "ud2", "ud2", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*sysenter*/  { "sysenter", "sysenter", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*sysexit*/  { "sysexit", "sysexit", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*syscall*/  { "syscall", "syscall", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*sysret*/  { "sysret", "sysret", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*sgdt*/  { "sgdt", "sgdt", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*sidt*/  { "sidt", "sidt", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*lgdt*/  { "lgdt", "lgdt", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*lidt*/  { "lidt", "lidt", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*sldt*/  { "sldt", "sldt", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*lldt*/  { "lldt", "lldt", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*smsw*/  { "smsw", "smsw", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*lmsw*/  { "lmsw", "lmsw", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*str*/  { "str", "str", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*verr*/  { "verr", "verr", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*verw*/  { "verw", "verw", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*wbinvd*/  { "wbinvd", "wbinvd", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*wrmsr*/  { "wrmsr", "wrmsr", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*rdmsr*/  { "rdmsr", "rdmsr", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*rdpmc*/  { "rdpmc", "rdpmc", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*rdtsc*/  { "rdtsc", "rdtsc", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*clts*/  { "clts", "clts", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*cpuid*/  { "cpuid", "cpuid", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*invd*/  { "invd", "invd", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*invlpg*/  { "invlpg", "invlpg", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*lar*/  { "lar", "lar", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*lsl*/  { "lsl", "lsl", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*ltr*/  { "ltr", "ltr", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_movcr*/  { "_movcr", "_movcr", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_movdr*/  { "_movdr", "_movdr", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*les*/  { "les", "les", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*lds*/  { "lds", "lds", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*lss*/  { "lss", "lss", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*lfs*/  { "lfs", "lfs", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*lgs*/  { "lgs", "lgs", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*bsf*/  { "bsf", "bsf", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*bsr*/  { "bsr", "bsr", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*bt*/  { "bt", "bt", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*bts*/  { "bts", "bts", 2, {-1, -1, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*btr*/  { "btr", "btr", 2, {-1, -1, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*btc*/  { "btc", "btc", 2, {-1, -1, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*bswap*/  { "bswap", "bswap", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*cmpxchg*/  { "cmpxchg", "cmpxchg", 2, {-1, -1, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmpxchgxb*/  { "_cmpxchgxb", "_cmpxchgxb", 1, {-1, 0, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*movzx*/  { "movzx", "movzx", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*movsx*/  { "movsx", "movsx", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*shld*/  { "shld", "shld", 3, {-1, -1, -1, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*shrd*/  { "shrd", "shrd", 3, {-1, -1, -1, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*xadd*/  { "xadd", "xadd", 2, {-1, -1, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*enter*/  { "enter", "enter", 2, {2, 2, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*leave*/  { "leave", "leave", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*hlt*/  { "hlt", "hlt", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*cli*/  { "cli", "cli", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*sti*/  { "sti", "sti", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*in*/  { "in", "in", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*out*/  { "out", "out", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovo*/  { "_cmovo", "cmovo", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovno*/  { "_cmovno", "cmovno", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovc*/  { "_cmovc", "cmovc", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovnc*/  { "_cmovnc", "cmovnc", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovz*/  { "_cmovz", "cmovz", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovnz*/  { "_cmovnz", "cmovnz", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovbe*/  { "_cmovbe", "cmovbe", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmova*/  { "_cmova", "cmova", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovs*/  { "_cmovs", "cmovs", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovns*/  { "_cmovns", "cmovns", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovp*/  { "_cmovp", "cmovp", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovnp*/  { "_cmovnp", "cmovnp", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovl*/  { "_cmovl", "cmovl", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovge*/  { "_cmovge", "cmovge", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovle*/  { "_cmovle", "cmovle", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmovg*/  { "_cmovg", "cmovg", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*emms*/  { "emms", "emms", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_fxrstor*/  { "_fxrstor", "_fxrstor", 1, {16, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_fxsave*/  { "_fxsave", "_fxsave", 1, {16, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_pushsr*/  { "_pushsr", "_pushsr", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_popsr*/  { "_popsr", "_popsr", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_push*/  { "_push", "_push", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_pop*/  { "_pop", "_pop", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_movsrv*/  { "_movsrv", "_movsrv", 2, {2, 2, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_movvsr*/  { "_movvsr", "_movvsr", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_pusha*/  { "_pusha", "_pusha", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_popa*/  { "_popa", "_popa", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_pushf*/  { "_pushf", "_pushf", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_popf*/  { "_popf", "_popf", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_movs*/  { "_movs", "_movs", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/1,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmps*/  { "_cmps", "_cmps", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/1,/*lock_always*/0,/*fwaitable*/0 },
	/*_stos*/  { "_stos", "_stos", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/1,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_lods*/  { "_lods", "_lods", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/1,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_scas*/  { "_scas", "_scas", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/1,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_test*/  { "_test", "_test", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_xchg*/  { "_xchg", "_xchg", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/1,/*fwaitable*/0 },
	/*not*/  { "not", "not", 1, {-1, 0, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*neg*/  { "neg", "neg", 1, {-1, 0, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*inc*/  { "inc", "inc", 1, {-1, 0, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*dec*/  { "dec", "dec", 1, {-1, 0, 0, 0}, /*lockable*/1,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_xlat*/  { "_xlat", "_xlat", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_seto*/  { "_seto", "seto", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_setno*/  { "_setno", "setno", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_setc*/  { "_setc", "setc", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_setnc*/  { "_setnc", "setnc", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_setz*/  { "_setz", "setz", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_setnz*/  { "_setnz", "setnz", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_setbe*/  { "_setbe", "setbe", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_seta*/  { "_seta", "seta", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_sets*/  { "_sets", "sets", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_setns*/  { "_setns", "setns", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_setp*/  { "_setp", "setp", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_setnp*/  { "_setnp", "setnp", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_setl*/  { "_setl", "setl", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_setge*/  { "_setge", "setge", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_setle*/  { "_setle", "setle", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_setg*/  { "_setg", "setg", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_nopmb*/  { "_nopmb", "_nopmb", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_usalc*/  { "_usalc", "_usalc", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_sxacc*/  { "_sxacc", "_sxacc", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_sxdax*/  { "_sxdax", "_sxdax", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*sahf*/  { "sahf", "sahf", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*lahf*/  { "lahf", "lahf", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*cmc*/  { "cmc", "cmc", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*clc*/  { "clc", "clc", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*stc*/  { "stc", "stc", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*cld*/  { "cld", "cld", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*std*/  { "std", "std", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*lea*/  { "lea", "lea", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*into*/  { "into", "into", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmul3*/  { "_cmul3", "_cmul3", 3, {-1, -1, -1, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_cmul2*/  { "_cmul2", "_cmul2", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_imulb*/  { "_imulb", "_imulb", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*imul*/  { "imul", "imul", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_mulb*/  { "_mulb", "_mulb", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*mul*/  { "mul", "mul", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_divb*/  { "_divb", "_divb", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*div*/  { "div", "div", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_idivb*/  { "_idivb", "_idivb", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*idiv*/  { "idiv", "idiv", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_uint1*/  { "_uint1", "_uint1", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jo*/  { "_jo", "jo", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jno*/  { "_jno", "jno", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jc*/  { "_jc", "jc", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jnc*/  { "_jnc", "jnc", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jz*/  { "_jz", "jz", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jnz*/  { "_jnz", "jnz", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jbe*/  { "_jbe", "jbe", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_ja*/  { "_ja", "ja", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_js*/  { "_js", "js", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jns*/  { "_jns", "jns", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jp*/  { "_jp", "jp", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jnp*/  { "_jnp", "jnp", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jl*/  { "_jl", "jl", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jge*/  { "_jge", "jge", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jle*/  { "_jle", "jle", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jg*/  { "_jg", "jg", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*call*/  { "call", "call", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_calli*/  { "_calli", "_calli", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_callfd*/  { "_callfd", "_callfd", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_callfi*/  { "_callfi", "_callfi", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*jmp*/  { "jmp", "jmp", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jmpi*/  { "_jmpi", "_jmpi", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jmpfd*/  { "_jmpfd", "_jmpfd", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jmpfi*/  { "_jmpfi", "_jmpfi", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_retnum*/  { "_retnum", "_retnum", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_ret*/  { "_ret", "_ret", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_retfnum*/  { "_retfnum", "_retfnum", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_retf*/  { "_retf", "_retf", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_int3*/  { "_int3", "_int3", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*int*/  { "int", "int", 1, {1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_iret*/  { "_iret", "_iret", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_loopnz*/  { "_loopnz", "_loopnz", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_loopz*/  { "_loopz", "_loopz", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_loop*/  { "_loop", "_loop", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_jrcxz*/  { "_jrcxz", "_jrcxz", 2, {-1, -1, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/1,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_fxch*/  { "_fxch", "_fxch", 1, {10, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*fst*/  { "fst", "fst", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*fstp*/  { "fstp", "fstp", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_fstcw*/  { "_fstcw", "stcw", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/1 },
	/*fldcw*/  { "fldcw", "fldcw", 1, {2, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*fld*/  { "fld", "fld", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_fmul1*/  { "_fmul1", "fmul", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_fmul2*/  { "_fmul2", "fmul", 2, {10, 10, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_fmulp*/  { "_fmulp", "fmulp", 2, {10, 10, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*fimul*/  { "fimul", "fimul", 1, {-1, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 },
	/*_wait*/  { "_wait", "wait", 0, {0, 0, 0, 0}, /*lockable*/0,/*repable*/0,/*ctrlxfer*/0,/*repcond*/0,/*lock_always*/0,/*fwaitable*/0 }
};

