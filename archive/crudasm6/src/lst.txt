These notes should apply to Linux as well as Windows with some version of GCC and MSYS
(http://www.mingw.org/wiki/MSYS) or CYGWIN.

lst.txt
-------

[quick start instructions]:
It is recommended you edit common/include/types.h for your platform before beginning.
If you want to build a quick demo, execute the following instructions:
cd programs/crudbin
gcc -o crudbin crudbin.c ../../core/decoder_internal.c ../../core/ixdecoder.c ../../core/ixdisasm.c
./crudbin  (for instructions)

[how to build everything]
1. Edit common/include/types.h for your platform before beginning
   Specifically, if sizeof(long) is 4 and not 8, you need to change the typedef for U8 and S8 so
   they use a long long type.
2. Find all *.sh files and chmod +x them
3. Change to the "scripts" directory
4. Execute: ./build_all.sh

[file listing]:
generated/			Contains auto-generated files
scripts/
	in_intel.c		The main script that defines x86/x64 syntax and semantics
	build_all.sh	Builds everything (to use, run with 'scripts' as the current directory)
common/				Some common header files
core/				Contains the "core" code, i.e. non-autogenerated parts of the disassembler, etc.
tests/				Contains testing programs
build/				Empty directory, location for binaries
util/
	rulecom/		A paser generator similar to yacc/flex
	makexml/		Reads in_intel.c and generates intel.xml
	readxml/		Reads intel.xml (used by mkdecoder, mkdisasm, etc.)
	mkdecoder/		Generates the decoder from intel.xml
	mkdisasm/		Generates the disassembler from intel.xml
	mkemu/			Generates the emulator code from intel.xml
programs/			Contains stand-alone programs such as crudwin, the Windows EXE/DLL disassembler

